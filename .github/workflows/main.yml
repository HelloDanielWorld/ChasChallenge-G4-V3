name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  test-backend:
    name: Test Backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'  # .NET version
      
      - name: Install dependencies
        run: dotnet restore ./ChasChallenge-G4-V3.Server/ChasChallenge-G4-V3.Server.csproj

      - name: Install dependencies for testing
        run: dotnet restore ./ChasChallenge-G4-V3-ServerTests/ChasChallenge-G4-V3-ServerTests.csproj

      - name: Build project
        run: dotnet build ./ChasChallenge-G4-V3.Server/ChasChallenge-G4-V3.Server.csproj

      - name: Run tests for ChasChallenge-G4-V3-ServerTests
        run: dotnet test --verbosity detailed ./ChasChallenge-G4-V3-ServerTests/ChasChallenge-G4-V3-ServerTests.csproj

  publish-backend:
    name: Publish Backend
    runs-on: ubuntu-latest
    needs: test-backend

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install dependencies
        run: dotnet restore ./ChasChallenge-G4-V3.Server/ChasChallenge-G4-V3.Server.csproj

      - name: Publish project
        run: dotnet publish --configuration Release --output ./publish ./ChasChallenge-G4-V3.Server/ChasChallenge-G4-V3.Server.csproj

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/chaschallenge-g4-v3-server:latest -f ./ChasChallenge-G4-V3.Server/Dockerfile .

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/chaschallenge-g4-v3-server:latest

  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    needs: publish-backend

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install dependencies
        run: npm install --prefix ./chaschallenge-g4-v3.client

      - name: Build frontend
        run: |
          npm run build --prefix ./chaschallenge-g4-v3.client || true  # Continue even if there are errors

      - name: Archive production artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v2
        with:
          name: production-artifacts
          path: ./chaschallenge-g4-v3.client/dist
